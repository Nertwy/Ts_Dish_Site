generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AccessToken {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(255)
  user_id Int?
  users   users?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id")
}

model DishLikes {
  id         Int      @id @default(autoincrement())
  dish_id    Int
  user_id    Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  dishes     dishes   @relation(fields: [dish_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model RefreshToken {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(255)
  user_id Int?
  users   users?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id")
}

model dishes {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  cuisine     String      @db.VarChar(255)
  slug        String      @db.VarChar(255)
  url         String      @db.VarChar(255)
  ingredients Json
  recipes     Json
  DishLikes   DishLikes[]
}

model users {
  id           Int            @id @default(autoincrement())
  name         String?        @db.VarChar(255)
  password     String?        @db.VarChar(255)
  email        String?        @db.VarChar(255)
  confirmed    Boolean?
  role         String?        @db.VarChar(255)
  AccessToken  AccessToken[]
  DishLikes    DishLikes[]
  RefreshToken RefreshToken[]
}
