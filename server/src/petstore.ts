/**
 * Generated by orval v6.12.1 üç∫
 * Do not edit manually.
 * server
 * OpenAPI spec version: 1.0.0
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
export type RefreshToken200 = string | unknown;

export interface DishLikes {
  id: number;
  user_id: number;
  dish_id: number;
}

export interface LoginInterface {
  token: string;
  success: boolean;
  likes: DishLikes[] | null;
}

export type Role = typeof Role[keyof typeof Role];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Role = {
  ADMIN: 'ADMIN',
  USER: 'USER',
  MODERATOR: 'MODERATOR',
} as const;

export interface Tokens {
  access: string;
  refresh: string;
  tokenVersion: number;
}

export interface User {
  id: number;
  name: string;
  password: string;
  email?: string;
  confirmed: boolean;
  tokens?: Tokens;
  role?: Role;
}





  export const register = <TData = AxiosResponse<void>>(
    user: User, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/register`,
      user,options
    );
  }

export const login = <TData = AxiosResponse<LoginInterface>>(
    user: User, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/login`,
      user,options
    );
  }

export const refreshToken = <TData = AxiosResponse<RefreshToken200>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/refresh`,options
    );
  }

export type RegisterResult = AxiosResponse<void>
export type LoginResult = AxiosResponse<LoginInterface>
export type RefreshTokenResult = AxiosResponse<RefreshToken200>
